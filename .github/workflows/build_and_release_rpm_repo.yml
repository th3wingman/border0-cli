name: Build and release RPM repository
run-name: Build and release RPM repository (${{ github.ref_type }}=${{ github.ref_name }})

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read
  packages: write

jobs:
  build-and-release-rpm:
    runs-on: ubuntu-latest # Since GitHub Actions doesn't offer CentOS runners, you need to use dockeer inside the runner to build the RPMs
    env:
      ENV: "prod"
      CLOUDFRONT_DISTRIBUTION_ID: ${{ secrets.CLOUDFRONT_DISTRIBUTION_ID }}
      PGP_PRIVATE_KEY: ${{ secrets.PGP_PRIVATE_KEY }}

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: us-east-2
          role-to-assume: ${{ secrets.PROD_BUILD_AND_DEPLOY_ROLE }}
          role-session-name: RPMBuildAndDeploy4border0cli
          role-duration-seconds: 1800 # 30 minutes

      - uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
      - run: go version

      - name: Generate git repo version string
        run: |
          BORDER0_VERSION=$(git describe --long --dirty --tags)
          echo ${BORDER0_VERSION}
          echo "BORDER0_VERSION=${BORDER0_VERSION}" >> $GITHUB_ENV

      - name: where am i?
        run: |
          pwd
          ls

      - name: Run Make all
        run: |
            make all

      - name: Run Make build-linux-multiarch
        run: |
            make build-linux-multiarch

      - name: Build Docker container for RPM creation
        run: |
          mkdir -p $PWD/rpm
          docker build -t rpm-builder -f .github/docker/Dockerfile .

      - name: Run Docker rpm-builder container
        run: |
          docker run --rm \
            -v $PWD/bin:/root/bin \
            -v $PWD/rpm:/root/rpm \
            -v $PWD/CENTOS:/root/CENTOS \
            --env PGP_PRIVATE_KEY="$PGP_PRIVATE_KEY" \
            --env BORDER0_VERSION="$BORDER0_VERSION" \
            rpm-builder

      - name: Publish repo ${BORDER0_VERSION} to S3 bucket
        run: |
          aws s3 sync $PWD/rpm/ s3://pub-mysocketctl-bin/rpm/

      - name: Invalidate CloudFront cache for download.border0.com
        run: |
          aws cloudfront create-invalidation --distribution-id ${CLOUDFRONT_DISTRIBUTION_ID} --paths "/*"
